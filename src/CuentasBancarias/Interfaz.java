/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package CuentasBancarias;

import java.awt.HeadlessException;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.EOFException;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import modeloBancario.*;

/**
 *
 * @author margo
 */
public class Interfaz extends javax.swing.JFrame {
    public static ArrayList <CuentaAhorro> arrayAhorro = new ArrayList <CuentaAhorro>();
    protected static String ficheroAhorro = "cuentaAhorro.dat";
    
    protected static ArrayList <CuentaCorriente> arrayCorriente = new ArrayList <CuentaCorriente>();
    protected static String ficheroCorriente = "cuentaCorriente.dat";
    /**
     * Creates new form Interfaz
     */
    public Interfaz() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        GrupoCuentas = new javax.swing.ButtonGroup();
        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        buttIngresar = new javax.swing.JButton();
        buttAlta = new javax.swing.JButton();
        buttRetirar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtArea = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtCuenta = new javax.swing.JTextField();
        txtDireccion = new javax.swing.JTextField();
        txtTelefono = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtVariable = new javax.swing.JTextField();
        SaldoMinimo = new javax.swing.JLabel();
        txtSaldoMinimo = new javax.swing.JTextField();
        buttActualizarSaldo = new javax.swing.JButton();
        radioCuentaAhorro = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        radioCuentaCorriente = new javax.swing.JRadioButton();
        jtxtSaldo = new javax.swing.JLabel();
        buttSalir = new javax.swing.JButton();
        txtSaldo = new javax.swing.JTextField();
        jLabelIdCliente = new javax.swing.JLabel();
        txtIdCliente = new javax.swing.JTextField();
        buttMostrar = new javax.swing.JButton();
        buttBorrar = new javax.swing.JButton();

        jButton1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jButton1.setText("Salir");

        jLabel4.setText("jLabel4");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setText("Numero Cuenta");

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel2.setText("Nombre cliente");

        buttIngresar.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        buttIngresar.setText("Ingresar");
        buttIngresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttIngresarActionPerformed(evt);
            }
        });

        buttAlta.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        buttAlta.setText("Alta");
        buttAlta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttAltaActionPerformed(evt);
            }
        });

        buttRetirar.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        buttRetirar.setText("Retirar");
        buttRetirar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttRetirarActionPerformed(evt);
            }
        });

        txtArea.setColumns(20);
        txtArea.setRows(5);
        jScrollPane1.setViewportView(txtArea);

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel6.setText("Cuenta Ahorro");

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel7.setText("Datos Cliente:");

        jLabel8.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel8.setText("Direcci√≥n");

        jLabel9.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel9.setText("Telefono");

        jLabel10.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel10.setText("Interes variable");

        SaldoMinimo.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        SaldoMinimo.setText("Saldo Minimo");

        buttActualizarSaldo.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        buttActualizarSaldo.setText("Atualizar Saldo");
        buttActualizarSaldo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buttActualizarSaldo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttActualizarSaldoActionPerformed(evt);
            }
        });

        GrupoCuentas.add(radioCuentaAhorro);

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel3.setText("Cuenta Corriente");

        GrupoCuentas.add(radioCuentaCorriente);

        jtxtSaldo.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jtxtSaldo.setText("Saldo");

        buttSalir.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        buttSalir.setText("Salir");
        buttSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttSalirActionPerformed(evt);
            }
        });

        jLabelIdCliente.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabelIdCliente.setText("ID Cliente");

        buttMostrar.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        buttMostrar.setText("Mostrar");
        buttMostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttMostrarActionPerformed(evt);
            }
        });

        buttBorrar.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        buttBorrar.setText("Borrar");
        buttBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttBorrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel7)
                    .addComponent(jLabelIdCliente)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(txtIdCliente, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtCuenta, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtDireccion, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                        .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtTelefono, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                        .addComponent(txtNombre, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(radioCuentaCorriente))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel10)
                                .addComponent(txtVariable)
                                .addComponent(SaldoMinimo)
                                .addComponent(txtSaldoMinimo, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(radioCuentaAhorro))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addComponent(buttActualizarSaldo))
                            .addComponent(jtxtSaldo)
                            .addComponent(txtSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(buttRetirar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(buttIngresar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(buttAlta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(buttSalir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(buttMostrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(buttBorrar))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel7)
                                .addComponent(jLabel6))
                            .addComponent(radioCuentaAhorro)
                            .addComponent(buttIngresar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelIdCliente)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtIdCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtVariable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buttBorrar))
                        .addGap(7, 7, 7)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(SaldoMinimo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSaldoMinimo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buttRetirar))
                        .addGap(38, 38, 38)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel1)
                                            .addComponent(jLabel3))
                                        .addGap(4, 4, 4)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(txtCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jtxtSaldo)
                                            .addComponent(buttAlta)))
                                    .addComponent(radioCuentaCorriente))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel8))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(33, 33, 33)
                                        .addComponent(buttMostrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buttActualizarSaldo)
                            .addComponent(buttSalir)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Metodo para leer las cuentas de ahorro almacenadas en el archivo que 
     * corresponde a las cuentas de ahorro
     * @throws IOException
     * @throws FileNotFoundException 
     */
    public static void leerCuentaAhorro() throws IOException, FileNotFoundException{
        File f = new File (ficheroAhorro);
        if (!f.exists()) f.createNewFile();
        DataInputStream data = new DataInputStream (new FileInputStream (f));
        
        String id, nombre, direccion, telefono;
        int numeroDeCuenta1;
        double saldo1, saldoMinimo1, interesVariable1;
        boolean salir = false;
        
        do{
            try{
                numeroDeCuenta1 = Integer.parseInt(data.readUTF());
                saldo1 = Double.parseDouble(data.readUTF());
                saldoMinimo1 = Double.parseDouble(data.readUTF());
                id = data.readUTF();
                nombre = data.readUTF();
                direccion = data.readUTF();
                telefono = data.readUTF();
                interesVariable1 = Double.parseDouble(data.readUTF());
                    
                CuentaAhorro cuenta = new CuentaAhorro(numeroDeCuenta1, saldo1, saldoMinimo1, new Cliente(Integer.parseInt(id), nombre, direccion, telefono), interesVariable1);
                if (arrayAhorro == null) arrayAhorro = new ArrayList <>();
                arrayAhorro.add(cuenta);
            }
            catch(EOFException e){
                salir = true;
            }
        }while(!salir);
        data.close();
    }
    
    /**
     * Metodo para leer las cuentas de corriente almacenadas en el archivo que 
     * corresponde a las cuentas de corriente
     * @throws IOException 
     */
    public static void leerCuentaCorriente() throws IOException{
        File f = new File (ficheroCorriente);
        if (!f.exists()) f.createNewFile();
        DataInputStream data = new DataInputStream (new FileInputStream (f));
        String id, nombre, direccion, telefono;
        int numeroDeCuenta1;
        double saldo1;
        boolean salir = false;
        do{
            try{
                numeroDeCuenta1 = Integer.parseInt(data.readUTF());
                saldo1 = Double.parseDouble(data.readUTF());
                id = data.readUTF();
                nombre = data.readUTF();
                direccion = data.readUTF();
                telefono = data.readUTF();
                    
                CuentaCorriente cuentaCorr = new CuentaCorriente(numeroDeCuenta1, saldo1, new Cliente(Integer.parseInt(id), nombre, direccion, telefono));
                if (arrayCorriente == null) arrayCorriente = new ArrayList <>();
                arrayCorriente.add(cuentaCorr);
            }
            catch(EOFException e){
                salir = true;
            }
        }while(!salir);
        data.close();
    }
    
    /**
     * Funcion que guardara los cambios realizados en los archivos.
     */
    public void guardarArrayAhorro (){
        try {
            File ficheroDatos = new File (ficheroAhorro);
            DataOutputStream dat = new DataOutputStream(new FileOutputStream(ficheroDatos));
            for (CuentaAhorro cuenta: arrayAhorro){
                dat.writeUTF(Integer.toString(cuenta.getNumeroDeCuenta()));
                dat.writeUTF(Double.toString(cuenta.getSaldo()));
                dat.writeUTF(Double.toString(cuenta.getSaldoMinimo()));
                dat.writeUTF(Integer.toString(cuenta.getTitular().getIdCliente()));
                dat.writeUTF(cuenta.getTitular().getNombre());
                dat.writeUTF(cuenta.getTitular().getDireccion());
                dat.writeUTF(cuenta.getTitular().getTelefono());
                dat.writeUTF(Double.toString(cuenta.getInteresVariable()));
            }
            dat.close();
        }catch (FileNotFoundException ex){
            System.out.println("No se ha guardado el array");
        } catch (IOException ex) {
            System.out.println("No se ha guardado el array");
            Logger.getLogger(CuentaAhorro.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    /**
     * Funcion que guardara los cambios realizados en los archivos.
     * Solo se ejecuta al darle al boton salir.
     */
    public void guardarArrayCorriente () {
        try {
            File ficheroDatos = new File (ficheroCorriente);
            DataOutputStream dat = new DataOutputStream(new FileOutputStream(ficheroDatos));
            for (CuentaCorriente cuenta: arrayCorriente){
                dat.writeUTF(Integer.toString(cuenta.getNumeroDeCuenta()));
                dat.writeUTF(Double.toString(cuenta.getSaldo()));
                dat.writeUTF(Integer.toString(cuenta.getTitular().getIdCliente()));
                dat.writeUTF(cuenta.getTitular().getNombre());
                dat.writeUTF(cuenta.getTitular().getDireccion());
                dat.writeUTF(cuenta.getTitular().getTelefono());
            }
            dat.close();
        }catch (FileNotFoundException ex){
            System.out.println("No se ha guardado el array");
        } catch (IOException ex) {
            System.out.println("No se ha guardado el array");
            Logger.getLogger(CuentaAhorro.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
   
    /**
     * Funcion para buscar una cuenta y poder hacer modificaciones en ella.
     * @param tipo
     * @param num
     * @return 
     */
    private Cuenta buscar (boolean tipo, int num){
        int i = 0;
        Cuenta c = null;
        if (tipo){
            while (i<arrayAhorro.size()){
                if(arrayAhorro.get(i).getNumeroDeCuenta() == num){
                    c = arrayAhorro.get(i);
                    i = arrayAhorro.size();
                }else{
                    i++;
                }
            }
        }else{
            while (i<arrayCorriente.size()){
                if(arrayCorriente.get(i).getNumeroDeCuenta() == num){
                    c = arrayCorriente.get(i);
                    i = arrayCorriente.size();
                }else{
                    i++;
                }
            }
        }
        return c;
    }
    
    /**
     * Borra el contenido del area de texto informativo.
     * @param evt 
     */
    private void buttBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttBorrarActionPerformed
        txtArea.setText("");
    }//GEN-LAST:event_buttBorrarActionPerformed
    
    /**
     * Boton que muestra todas las cuentas creadas en los archivos.
     * @param evt 
     */
    private void buttMostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttMostrarActionPerformed
        String cuentasAhorro = "";
        String cuentasCorriente = "";
        for (int i =0; i< arrayAhorro.size(); i++){
            cuentasAhorro = cuentasAhorro + "Numero de cuenta AHORRO............:" + arrayAhorro.get(i).getNumeroDeCuenta() + "\n";
            cuentasAhorro = cuentasAhorro + "Nombre cliente............:" + arrayAhorro.get(i).getTitular().getNombre() + "\n";
            cuentasAhorro = cuentasAhorro + "Saldo..........:" + arrayAhorro.get(i).getSaldo() + "\n";
            cuentasAhorro = cuentasAhorro + "Saldo minimo.......:" + arrayAhorro.get(i).getSaldoMinimo() + "\n";
            cuentasAhorro = cuentasAhorro + "Interes variable.......:" + arrayAhorro.get(i).getInteresVariable() + "\n";
            cuentasAhorro = cuentasAhorro +"------------------" + "\n";
        }
        for (int i =0; i< arrayCorriente.size(); i++){
            cuentasCorriente = cuentasCorriente + "Numero de cuenta CORRIENTE............:" + arrayCorriente.get(i).getNumeroDeCuenta() + "\n";
            cuentasCorriente = cuentasCorriente + "Nombre cliente............:" + arrayCorriente.get(i).getTitular().getNombre() + "\n";
            cuentasCorriente = cuentasCorriente + "Saldo..........:" + arrayCorriente.get(i).getSaldo() + "\n";
            cuentasCorriente = cuentasCorriente +"------------------" + "\n";
        }
        txtArea.setText(cuentasAhorro + cuentasCorriente);
    }//GEN-LAST:event_buttMostrarActionPerformed

    /**
     * Boton para salir del programa y guardar todos los cambios.
     * @param evt 
     */
    private void buttSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttSalirActionPerformed
        guardarArrayAhorro();
        guardarArrayCorriente();
        System.exit(0);
    }//GEN-LAST:event_buttSalirActionPerformed
    
    /**
     * Boton para actualizar el saldo de una cuenta que enviamos por parametro.
     * @param evt 
     */
    private void buttActualizarSaldoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttActualizarSaldoActionPerformed
        int numCuenta = Integer.parseInt(txtCuenta.getText());
        double saldo = Double.parseDouble(txtSaldo.getText());
        Cuenta cuenta = null;
        if (radioCuentaAhorro.isSelected()){
            cuenta = buscar(true, numCuenta);
            cuenta.actualizarSaldo(saldo);
            txtArea.setText("Se ha actualizado la cuenta: "
                + cuenta.getNumeroDeCuenta() + "\n"
                + "Nombre: " + cuenta.getTitular().getNombre() + "\n"
                + "Saldo: " + cuenta.getSaldo() + "\n");
        }else if (radioCuentaCorriente.isSelected()){
            cuenta = buscar(false, numCuenta);
            cuenta.actualizarSaldo(saldo);
            txtArea.setText("Se ha actualizado la cuenta: "
                + cuenta.getNumeroDeCuenta() + "\n"
                + "Nombre: " + cuenta.getTitular().getNombre() + "\n"
                + "Nuevo saldo: " + cuenta.getSaldo() + "\n");
        }else JOptionPane.showMessageDialog(rootPane, "Debe seleccionar una cuenta");
    }//GEN-LAST:event_buttActualizarSaldoActionPerformed

    /**
     * Boton para retirar saldo de una cuenta que enviamos por parametro.
     * @param evt 
     */
    private void buttRetirarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttRetirarActionPerformed
        int numCuenta = Integer.parseInt(txtCuenta.getText());
        double saldo = Double.parseDouble(txtSaldo.getText());
        Cuenta cuenta = null;
        if (radioCuentaAhorro.isSelected()){
            cuenta = buscar(true, numCuenta);
            cuenta.retirar(saldo);
            txtArea.setText("Se ha retirado " + saldo + "de la cuenta: "
                + cuenta.getNumeroDeCuenta() + "\n"
                + "Nombre: " + cuenta.getTitular().getNombre() + "\n"
                + "Nuevo saldo: " + cuenta.getSaldo() + "\n");
        }else if (radioCuentaCorriente.isSelected()){
            cuenta = buscar(false, numCuenta);
            cuenta.retirar(saldo);
            txtArea.setText("Se ha retirado " + saldo + "de la cuenta: "
                + cuenta.getNumeroDeCuenta() + "\n"
                + "Nombre: " + cuenta.getTitular().getNombre() + "\n"
                + "Nuevo saldo: " + cuenta.getSaldo() + "\n");
        }else{
            JOptionPane.showMessageDialog(rootPane, "Debe seleccionar una cuenta");
        }
    }//GEN-LAST:event_buttRetirarActionPerformed

    /**
     * Boton para ingresar saldo en una cuenta que enviamos por parametro.
     * @param evt 
     */
    private void buttIngresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttIngresarActionPerformed
        int numCuenta = Integer.parseInt(txtCuenta.getText());
        double saldo = Double.parseDouble(txtSaldo.getText());
        Cuenta cuenta = null;
        if (radioCuentaAhorro.isSelected()){
            cuenta = buscar(true, numCuenta);
            cuenta.ingresar(saldo);
        }else if (radioCuentaCorriente.isSelected()){
            cuenta = buscar(false, numCuenta);
            cuenta.ingresar(saldo);
        }else{
            JOptionPane.showMessageDialog(rootPane, "Debe seleccionar una cuenta");
        }
    }//GEN-LAST:event_buttIngresarActionPerformed

    /**
     * Este boton nos permite crear los clientes y vincularlos a una cuenta.
     * Id de cliente y numero de cuenta deben tener 5 digitos obligatoriamente.
     * Es necesario seleccionar una cuenta en la interfaz de usuario.
     * @param evt 
     */
    private void buttAltaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttAltaActionPerformed
        int idCuenta = 0;
        double saldo, saldoMinimo, interesVariable;
        
        if (radioCuentaAhorro.isSelected()){
            Cliente titularAhorr =new Cliente();
            if (Integer.parseInt(txtIdCliente.getText()) >= 10000 && Integer.parseInt(txtIdCliente.getText()) <= 99999){
                titularAhorr.setIdCliente(Integer.parseInt(txtIdCliente.getText()));
                titularAhorr.setNombre(txtNombre.getText());
                titularAhorr.setDireccion(txtDireccion.getText());
                titularAhorr.setTelefono(txtTelefono.getText());
            }else JOptionPane.showMessageDialog(rootPane, "El ID de cliente debe contener 5 digitos");
            
            CuentaAhorro cuantaAhorr = new CuentaAhorro();
            try {
                if (Integer.parseInt(txtCuenta.getText()) >= 10000 && Integer.parseInt(txtCuenta.getText()) <= 99999){
                    idCuenta = Integer.parseInt(txtCuenta.getText());
                    saldo = Double.parseDouble(txtSaldo.getText());
                    saldoMinimo = Double.parseDouble(txtSaldoMinimo.getText());
                    interesVariable = Double.parseDouble(txtVariable.getText());

                    cuantaAhorr.setNumeroDeCuenta(idCuenta);
                    cuantaAhorr.setSaldo(saldo);
                    cuantaAhorr.setSaldoMinimo(saldoMinimo);
                    cuantaAhorr.setTitular(titularAhorr);
                    cuantaAhorr.setInteresVariable(interesVariable);
                    arrayAhorro.add(cuantaAhorr);
                    txtArea.setText("Se ha creado la cuenta " + cuantaAhorr.getNumeroDeCuenta() + "\n"
                                    + "Nombre: " + cuantaAhorr.getTitular().getNombre() + "\n"
                                    + "Saldo: " + cuantaAhorr.getSaldo() + "\n"
                                    + "Saldo minimo: " + cuantaAhorr.getSaldoMinimo() + "\n"
                                    + "Interes variable: " + cuantaAhorr.getInteresVariable() + "\n");
                }else JOptionPane.showMessageDialog(rootPane, "El numero de cuenta debe contener 5 digitos");
            } catch (HeadlessException | NumberFormatException e){
                JOptionPane.showMessageDialog(rootPane, "El numero de cuenta debe contener 5 digitos");
            }
        }else if (radioCuentaCorriente.isSelected()){
            Cliente titularCorr =new Cliente();
            if (Integer.parseInt(txtIdCliente.getText()) >= 10000 && Integer.parseInt(txtIdCliente.getText()) <= 99999){
                titularCorr.setIdCliente(Integer.parseInt(txtIdCliente.getText()));
                titularCorr.setNombre(txtNombre.getText());
                titularCorr.setDireccion(txtDireccion.getText());
                titularCorr.setTelefono(txtTelefono.getText());
            }else JOptionPane.showMessageDialog(rootPane, "El ID de cliente debe contener 5 digitos");
            
            CuentaCorriente cuentaCorr = new CuentaCorriente();
            try {
                if (Integer.parseInt(txtCuenta.getText()) >= 10000 && Integer.parseInt(txtCuenta.getText()) <= 99999){
                    idCuenta = Integer.parseInt(txtCuenta.getText());
                    saldo = Double.parseDouble(txtSaldo.getText());

                    cuentaCorr.setNumeroDeCuenta(idCuenta);
                    cuentaCorr.setSaldo(saldo);
                    cuentaCorr.setTitular(titularCorr);
                    arrayCorriente.add(cuentaCorr);
                    txtArea.setText("Se ha creado la cuenta " + cuentaCorr.getNumeroDeCuenta() + "\n"
                                    + "Nombre: " + cuentaCorr.getTitular().getNombre() + "\n"
                                    + "Saldo: " + cuentaCorr.getSaldo() + "\n");
                }else JOptionPane.showMessageDialog(rootPane, "El numero de cuenta debe contener 5 digitos");
            } catch (HeadlessException | NumberFormatException e){
                JOptionPane.showMessageDialog(rootPane, "El numero de cuenta debe contener 5 digitos");
            }
        }else JOptionPane.showMessageDialog(rootPane, "Debe seleccionar un tipo de cuenta");
    }//GEN-LAST:event_buttAltaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        try {
            leerCuentaAhorro();
            leerCuentaCorriente();
                    
            /* Set the Nimbus look and feel */
            //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
            /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
            * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
            */
            try {
                for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                    if ("Nimbus".equals(info.getName())) {
                        javax.swing.UIManager.setLookAndFeel(info.getClassName());
                        break;
                    }
                }
            } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
                java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            }
            //</editor-fold>

            //</editor-fold>
            
            
            
            /* Create and display the form */
            java.awt.EventQueue.invokeLater(new Runnable() {
                @Override
                public void run() {
                    new Interfaz().setVisible(true);
                }
            });
        } catch (IOException ex) {
            Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup GrupoCuentas;
    private javax.swing.JLabel SaldoMinimo;
    private javax.swing.JButton buttActualizarSaldo;
    private javax.swing.JButton buttAlta;
    private javax.swing.JButton buttBorrar;
    private javax.swing.JButton buttIngresar;
    private javax.swing.JButton buttMostrar;
    private javax.swing.JButton buttRetirar;
    private javax.swing.JButton buttSalir;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelIdCliente;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel jtxtSaldo;
    private javax.swing.JRadioButton radioCuentaAhorro;
    private javax.swing.JRadioButton radioCuentaCorriente;
    private javax.swing.JTextArea txtArea;
    private javax.swing.JTextField txtCuenta;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtIdCliente;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtSaldo;
    private javax.swing.JTextField txtSaldoMinimo;
    private javax.swing.JTextField txtTelefono;
    private javax.swing.JTextField txtVariable;
    // End of variables declaration//GEN-END:variables
}
